/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.io.sofastack.cloud.core.kafka.configuration;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import io.sofastack.cloud.core.kafka.KafkaSender;
import io.sofastack.cloud.core.kafka.configuration.KafkaProducerAutoConfiguration;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.kafka.core.ProducerFactory;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class KafkaProducerAutoConfiguration_SSTest extends KafkaProducerAutoConfiguration_SSTest_scaffolding {
// allCoveredLines:[13, 17]

  @Test(timeout = 4000)
  public void test_kafkaSender_0()  throws Throwable  {
      //caseID:e33a4069e5d893b5defdfaadd8754e91
      //CoveredLines: [13, 17]
      //Input_0_KafkaTemplate<String, String>: producerFactory0
      //Assert: assertNotNull(method_result);
      
      KafkaProducerAutoConfiguration kafkaProducerAutoConfiguration0 = new KafkaProducerAutoConfiguration();
      //mock producerFactory0
      ProducerFactory<String, String> producerFactory0 = (ProducerFactory<String, String>) mock(ProducerFactory.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      KafkaTemplate<String, String> kafkaTemplate0 = new KafkaTemplate<String, String>(producerFactory0);
      
      //Call method: kafkaSender
      KafkaSender kafkaSender0 = kafkaProducerAutoConfiguration0.kafkaSender(kafkaTemplate0);
      
      //Test Result Assert
      assertNotNull(kafkaSender0);
  }
}
